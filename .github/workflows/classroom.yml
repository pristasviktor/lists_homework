name: Autograding Tests
on:
  - push
  - workflow_dispatch

permissions:
  actions: read
  contents: read

jobs:
  autograding:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-json-report

      - name: Run tests for test get sum
        id: test_get_sum
        run: |
          # Set default result (failure)
          echo '{"version":3,"status":"fail","tests":[{"name":"test get sum","status":"fail","test_code":"","task_id":"test_get_sum","filename":"tests/test_get_sum.py","line_no":4,"duration":1,"score":0}],"max_score":5}' | base64 -w 0 > test_get_sum_encoded.txt
          echo "TEST_GET_SUM_RESULT=$(cat test_get_sum_encoded.txt)" >> $GITHUB_ENV

          # Run pytest
          pytest -q --json-report --json-report-file=test_get_sum.json tests/test_get_sum.py
          TEST_RESULT=$?

          # Overwrite result on success
          if [ $TEST_RESULT -eq 0 ]; then
            echo '{"version":3,"status":"pass","tests":[{"name":"test get sum","status":"pass","test_code":"","task_id":"test_get_sum","filename":"tests/test_get_sum.py","line_no":4,"duration":1,"score":5}],"max_score":5}' | base64 -w 0 > test_get_sum_encoded.txt
            echo "TEST_GET_SUM_RESULT=$(cat test_get_sum_encoded.txt)" >> $GITHUB_ENV
          fi
        continue-on-error: true

      - name: Run tests for test greet
        id: test_greet
        run: |
          # Set default result (failure)
          echo '{"version":3,"status":"fail","tests":[{"name":"test greet","status":"fail","test_code":"","task_id":"test_greet","filename":"tests/test_greet.py","line_no":4,"duration":1,"score":0}],"max_score":20}' | base64 -w 0 > test_greet_encoded.txt
          echo "TEST_GREET_RESULT=$(cat test_greet_encoded.txt)" >> $GITHUB_ENV

          # Run pytest
          pytest -q --json-report --json-report-file=test_greet.json tests/test_greet.py
          TEST_RESULT=$?

          # Overwrite result on success
          if [ $TEST_RESULT -eq 0 ]; then
            echo '{"version":3,"status":"pass","tests":[{"name":"test greet","status":"pass","test_code":"","task_id":"test_greet","filename":"tests/test_greet.py","line_no":4,"duration":1,"score":20}],"max_score":20}' | base64 -w 0 > test_greet_encoded.txt
            echo "TEST_GREET_RESULT=$(cat test_greet_encoded.txt)" >> $GITHUB_ENV
          fi
        continue-on-error: true

      - name: Autograding Reporter
        uses: classroom-resources/autograding-grading-reporter@v1
        with:
          runners: test_get_sum,test_greet
        env:
          TEST_GET_SUM_RESULTS: ${{ env.TEST_GET_SUM_RESULT }}
          TEST_GREET_RESULTS: ${{ env.TEST_GREET_RESULT }}
